basePath: /
definitions:
  controller.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.People:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: integer
      passport_serie:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.Task:
    properties:
      description:
        type: string
      duration:
        type: string
      id:
        type: integer
      name:
        type: string
      people_id:
        type: integer
      time_end:
        type: string
      time_start:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Никита Ульяницкий
    url: https://t.me/Nulianitskiy
  description: Тестовое задание для Effective Mobile.
  title: Task Tracker
  version: "1.0"
paths:
  /allPeople:
    get:
      consumes:
      - application/json
      description: Возвращает список всех сотрудников с возможностью фильтрации
      parameters:
      - description: Страница
        example: 0
        in: query
        name: page
        required: true
        type: integer
      - description: Количество объектов на странице
        example: 5
        in: query
        name: page_size
        required: true
        type: integer
      - description: Фильтр (название параметра и параметр через двоеточие)
        example: name:Иванов
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.People'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Получить всех сотрудников
      tags:
      - people
  /people:
    delete:
      consumes:
      - application/json
      description: Удаляет сотрудника по идентификатору
      parameters:
      - description: Идентификатор сотрудника
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Удалить сотрудника
      tags:
      - people
    post:
      consumes:
      - application/json
      description: Добавляет нового сотрудника по номеру паспорта
      parameters:
      - description: Номер паспорта (серия и номер через пробел)
        example: 1234 567890
        in: query
        name: passportNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Добавить сотрудника
      tags:
      - people
    put:
      consumes:
      - application/json
      description: Обновляет информацию о сотруднике
      parameters:
      - description: Информация о сотруднике (серия и номер не изменяются)
        in: body
        name: people
        required: true
        schema:
          $ref: '#/definitions/model.People'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Обновить информацию о сотруднике
      tags:
      - people
  /task:
    get:
      consumes:
      - application/json
      description: Возвращает список задач для указанного сотрудника
      parameters:
      - description: Идентификатор работника
        example: 0
        in: query
        name: people_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Получить задачи сотрудника
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Добавляет новую задачу
      parameters:
      - description: Название задачи
        example: Новая задача
        in: query
        name: name
        required: true
        type: string
      - description: Описание задачи
        example: Описание...
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Добавить задачу
      tags:
      - tasks
  /taskAssign:
    put:
      consumes:
      - application/json
      description: Назначает сотрудников на указанную задачу
      parameters:
      - description: Идентификатор задачи
        example: 0
        in: query
        name: id
        required: true
        type: integer
      - description: Идентификатор работника
        example: 0
        in: query
        name: people_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Назначить сотрудников на задачу
      tags:
      - tasks
  /taskEnd:
    put:
      consumes:
      - application/json
      description: Завершает отслеживание времени задачи
      parameters:
      - description: Идентификатор задачи
        example: 0
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Завершить задачу
      tags:
      - tasks
  /taskStart:
    put:
      consumes:
      - application/json
      description: Начинает отслеживание времени задачи
      parameters:
      - description: Идентификатор задачи
        example: 0
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Начать задачу
      tags:
      - tasks
swagger: "2.0"
